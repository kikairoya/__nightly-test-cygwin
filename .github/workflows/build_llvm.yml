name: Build LLVM
on:
  workflow_call:
    inputs:
      upstream_ref:
        description: "Upstream branch to build"
        type: string
        required: true
        default: "main"
      config:
        description: "Build config script"
        type: string
        required: true
  workflow_dispatch:
    inputs:
      upstream_ref:
        description: "Upstream branch to build"
        type: string
        required: true
        default: "main"
      config:
        description: "Build config script"
        type: string
        required: true
        default: "clang-dylib"

jobs:
  do_build:
    runs-on: windows-latest

    steps:
      - run: git config --global core.autocrlf input

      - name: prepare patches
        uses: actions/checkout@v5
        with:
          path: patches
      - name: prepare Cygwin
        uses: ./patches/.github/actions/prepare-cygwin-root

      - name: prepare llvm tree
        uses: actions/checkout@v5
        with:
          repository: llvm/llvm-project
          fetch-tags: true
          ref: ${{ inputs.upstream_ref }}
          path: llvm-project
      - name: patch tree
        run: bash patches/.github/workflows/apply-cygwin-patches.sh "${{inputs.upstream_ref}}" "${{inputs.config}}"
        shell: bash

      - id: build
        if: ${{ success() }}
        name: build
        run: |
          export PATH=/usr/local/bin:/usr/bin:/bin:$PATH
          cd "$(cygpath -u '${{github.workspace}}')"

          cd patches
          cfgname=${{ inputs.config }}
          cfgfile=config-$cfgname.txt
          [ -f "$cfgfile" ]

          {
            echo LLVM_PARALLEL_COMPILE_JOBS=3
            echo LLVM_PARALLEL_LINK_JOBS=2
            echo LLVM_FORCE_VC_REVISION=$UPSTREAM_ENV
            echo LLVM_FORCE_VC_REPOSITORY=llvm-cygwin
          } >> $cfgfile

          ./runcmake.sh $cfgfile -v | tee ../buildlog-$cfgname-$LLVM_VERSION.txt
          ./runcmake.sh $cfgfile -v -i --prefix $PWD/llvm-cygwin-$cfgname-$LLVM_VERSION

          tar caf ../llvm-cygwin-$cfgname-$LLVM_VERSION.tar llvm-cygwin-$cfgname-$LLVM_VERSION
        shell: d:\cygwin\bin\bash.exe -leo pipefail -o igncr '{0}'

      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: artifact
          overwrite: true
          path: ${{ github.workspace }}/*-${{ env.LLVM_VERSION }}.tar

      - id: test
        timeout-minutes: 180
        name: build
        run: |
          export PATH=/usr/local/bin:/usr/bin:/bin:$PATH
          cd "$(cygpath -u '${{github.workspace}}')"

          cd patches
          cfgname=${{ inputs.config }}

          export LIT_OPTS="-sv --xunit-xml-output=$PWD/../result-$cfgname-$LLVM_VERSION.xml"
          ./runcmake.sh config-$cfgname.txt -v -- check | tee ../testlog-$cfgname-$LLVM_VERSION.txt
        shell: d:\cygwin\bin\bash.exe -leo pipefail -o igncr '{0}'


      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: buildlog
          overwrite: true
          path: |
            ${{ github.workspace }}/*-${{ env.LLVM_VERSION }}.txt
            ${{ github.workspace }}/*-${{ env.LLVM_VERSION }}.xml
