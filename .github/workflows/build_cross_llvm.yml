name: Cross build Cygwin binary
on:
  workflow_call:
    inputs:
      upstream-branch:
        description: 'Upstream branch to build'
        type: string
        required: true
        default: 'main'
      patch-series-host:
        description: 'Patch series to apply for host tool'
        type: string
        required: true
        default: 'cross'
      patch-series:
        description: 'Patch series to apply for target tool'
        type: string
        required: true
        default: 'main'
      config-host:
        description: 'Build config script for host tool'
        type: string
        required: false
        default: 'linux-clang'
      config:
        description: 'Build config script for target tool'
        type: string
        required: true
  workflow_dispatch:
    inputs:
      upstream-branch:
        description: 'Upstream branch to build'
        type: string
        required: true
        default: 'main'
      patch-series-host:
        description: 'Patch series to apply for host tool'
        type: string
        required: true
        default: 'cross'
      patch-series:
        description: 'Patch series to apply for target tool'
        type: string
        required: true
        default: 'main'
      config-host:
        description: 'Build config script for host tool'
        type: string
        required: false
        default: 'linux-clang'
      config:
        description: 'Build config script for target tool'
        type: string
        required: true
        default: 'cross-clang-dylib'

jobs:
  prepare-host:
    runs-on: ubuntu-latest
    name: Prepare host LLVM
    concurrency:
      group: build-self-linux

    steps:
      - name: prepare patches
        uses: actions/checkout@v5
        with:
          path: patches

      - id: make-cache-key
        run: echo key=${{ hashFiles(format('patches/patches/{0}/**', inputs.upstream_ref)) }} >> "$GITHUB_OUTPUT"
        shell: bash

      - id: cross-cache-restore
        uses: actions/cache/restore@v4
        with:
          key: linux-clang-head-${{ inputs.upstream-branch }}-${{ steps.make-cache-key.outputs.key }}
          path: |
            llvm-head

      - name: prepare llvm tree
        if: ${{ steps.cross-cache-restore.outputs.cache-hit != 'true' }}
        id: prepare-tree
        uses: ./patches/.github/actions/patch-llvm
        with:
          remote-ref: ${{ inputs.upstream-branch }}
          patch-series: ${{ inputs.patch-series-host }}

      - name: build llvm
        if: ${{ steps.cross-cache-restore.outputs.cache-hit != 'true' }}
        id: build-llvm
        uses: ./patches/.github/actions/build-llvm
        with:
          config-name: ${{ inputs.config-host }}

      - id: install
        if: ${{ steps.cross-cache-restore.outputs.cache-hit != 'true' }}
        env:
          BUILD_NAME: ${{ steps.build-llvm.outputs.build-name }}
        run: |
          cmake --install build-$BUILD_NAME --prefix $PWD/llvm-head
        shell: bash

      - uses: actions/cache/save@v4
        if: ${{ steps.cross-cache-restore.outputs.cache-hit != 'true' }}
        with:
          key: linux-clang-head-${{ inputs.upstream-branch }}-${{ steps.make-cache-key.outputs.key }}
          path: |
            llvm-head

  build:
    runs-on: ubuntu-latest
    name: Cross build LLVM ${{ inputs.upstream-branch }} ${{ inputs.config }}
    concurrency:
      group: build-cross-cygwin-from-linux
    needs: prepare-host

    steps:
      - name: prepare patches
        id: checkout-patch
        uses: actions/checkout@v5
        with:
          path: patches

      - id: make-cache-key
        run: echo key=${{ hashFiles(format('patches/patches/{0}/**', inputs.upstream-branch)) }} >> "$GITHUB_OUTPUT"
        shell: bash

      - id: cross-cache-restore
        uses: actions/cache/restore@v4
        with:
          fail-on-cache-miss: true
          key: linux-clang-head-${{ inputs.upstream-branch }}-${{ steps.make-cache-key.outputs.key }}
          path: |
            llvm-head

      - name: prepare Cygwin
        id: prepare-cygwin
        uses: ./patches/.github/actions/prepare-cygwin-root

      - name: prepare llvm tree
        id: prepare-tree
        uses: ./patches/.github/actions/patch-llvm
        with:
          remote-ref: ${{ inputs.upstream-branch }}
          patch-series: ${{ inputs.patch-series }}

      - name: build llvm
        id: build-llvm
        uses: ./patches/.github/actions/build-llvm
        env:
          CROSS_SYSROOT: ${{ steps.prepare-cygwin.outputs.root }}
          HOST_TOOLCHAIN: ${{ format('{0}/llvm-head/bin', github.workspace) }}
        with:
          config-name: ${{ inputs.config }}
